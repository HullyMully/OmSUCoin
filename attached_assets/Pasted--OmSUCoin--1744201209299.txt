Создай веб-приложение для университета под названием OmSUCoin, которое позволяет студентам зарабатывать токены за участие в активностях (например, конференции, волонтёрство) и отображает рейтинг студентов по количеству токенов. Токены хранятся на блокчейне Binance Smart Chain (BSC). Проект должен быть готов к использованию в Replit, с возможностью дальнейшего масштабирования.

Цель проекта
Платформа должна:

Давать студентам возможность зарабатывать токены OmSUCoin за участие в университетских мероприятиях.
Использовать BSC для хранения и управления токенами.
Позволять студентам регистрироваться с реальными данными (имя, фамилия, номер студенческого билета), но публично отображать их только по ID или псевдонимам.
Давать администраторам возможность создавать активности, подтверждать участие и начислять токены.
Показывать рейтинг студентов по количеству токенов.
Позволять студентам видеть, на что они могут потратить токены (например, университетские услуги).
Основные функции
Регистрация и авторизация:
Студенты регистрируются с именем, фамилией, номером студенческого билета и адресом кошелька (например, MetaMask).
При регистрации автоматически генерируется уникальный ID (например, 'Student1234'), а студент может выбрать псевдоним (опционально).
Администраторы имеют отдельный доступ с повышенными правами (через логин и пароль).
Профиль студента:
Отображает текущий баланс токенов.
Показывает историю начислений (дата, активность, количество токенов).
Позволяет выбрать или изменить псевдоним.
Показывает список возможных услуг, на которые можно потратить токены (например, 'Скидка в столовой — 50 токенов').
Создание активностей:
Администратор добавляет активность: название, описание, количество токенов за участие, дату и место проведения.
Запись на активности:
Студенты видят список доступных активностей и могут записаться, указав свой ID или псевдоним.
Проверка участия:
Администратор подтверждает участие студентов после завершения активности (например, через список участников).
Начисление токенов:
После подтверждения участия токены автоматически начисляются студентам через смарт-контракт (используй функцию batchMint для группировки транзакций).
Рейтинг:
Публичная таблица лидеров, показывающая топ студентов по количеству токенов (по псевдонимам или ID, без раскрытия личных данных).
Обмен токенов (упрощённая версия):
Студенты видят список услуг, на которые можно потратить токены (например, 'Сувениры — 100 токенов'). Пока достаточно заглушки — без реального списания токенов.
Технологии
Фронтенд: React — для создания интерактивного интерфейса.
Бэкенд: Node.js с Express — для обработки запросов и управления логикой.
База данных: PostgreSQL — для хранения данных о студентах, активностях и истории начислений.
Блокчейн: Web3.js — для взаимодействия с Binance Smart Chain.
Смарт-контракт: Solidity — для создания токена OmSUCoin по стандарту BEP-20.
Блокчейн и смарт-контракт
Создай токен OmSUCoin на основе стандарта BEP-20.
В смарт-контракте реализуй функцию batchMint, чтобы администратор мог начислять токены сразу нескольким студентам:
solidity

Свернуть

Перенос

Копировать
function batchMint(address[] memory recipients, uint256[] memory amounts) public onlyOwner {
    require(recipients.length == amounts.length, "Arrays length mismatch");
    for (uint256 i = 0; i < recipients.length; i++) {
        _mint(recipients[i], amounts[i]);
    }
}
Подключи платформу к BSC через провайдер (используй BSC Testnet для разработки).
В файле .env добавь переменную VITE_TOKEN_CONTRACT_ADDRESS для хранения адреса контракта.
Безопасность
Шифруй личные данные студентов (имя, фамилия, номер студенческого билета) в базе данных (например, с помощью библиотеки bcrypt).
Используй HTTPS для защиты соединения.
Для администраторов предусмотри базовую аутентификацию (логин и пароль).
Интерфейс
Дизайн: Простой и интуитивный, используй библиотеку shadcn/ui для компонентов.
Главная страница: Список доступных активностей с кнопкой "Записаться".
Профиль студента: Баланс токенов, история начислений, настройка псевдонима, список услуг для обмена токенов.
Админ-панель: Форма для создания активностей, список записавшихся студентов, кнопка для подтверждения участия и начисления токенов.
Рейтинг: Отдельная страница с таблицей лидеров (псевдоним/ID и количество токенов).
Задача для Replit AI
Сгенерируй базовую структуру проекта с примерами кода:

Фронтенд: React-компоненты для главной страницы, профиля, рейтинга и страницы обмена токенов.
Бэкенд: Node.js с Express — endpoints для регистрации (/register), входа (/login), создания активностей (/activities), записи на активности (/activities/:id/register), подтверждения участия (/activities/:id/confirm) и начисления токенов (/activities/:id/mint).
База данных: Настрой PostgreSQL с таблицами:
users (id, name, surname, student_id, wallet_address, pseudonym, password_hash).
activities (id, title, description, tokens, date, location).
registrations (id, activity_id, user_id, confirmed).
transactions (id, user_id, activity_id, tokens, date).
Смарт-контракт: Код токена OmSUCoin в Solidity с функцией batchMint.
Подключение к BSC: Используй Web3.js для взаимодействия с контрактом (пример: получение баланса и вызов batchMint).
Дополнительные указания
Используй BSC Testnet для блокчейн-части.
Добавь файл .env с переменными:
env

Свернуть

Перенос

Копировать
VITE_TOKEN_CONTRACT_ADDRESS=0xYourContractAddress
DATABASE_URL=postgresql://user:password@localhost:5432/omsucoin
Убедись, что process.env заменено на import.meta.env для фронтенда, чтобы избежать ошибок (как в прошлом проекте).
Разбей задачу на части, если нужно, но начни с общей структуры проекта.
Ожидаемый результат
После выполнения я хочу:

Запустить приложение и увидеть главную страницу с активностями.
Зарегистрироваться как студент, подключить MetaMask и записаться на активность.
Войти как администратор, создать активность и начислить токены.
Увидеть рейтинг студентов и страницу обмена токенов.